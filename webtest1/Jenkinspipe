@Library("webtestlib") _
pipeline{
parameters {
  choice choices: ['main', 'develop', 'qatest'], description: 'choose a branch to build', name: 'SelectBranch'
  }
    /*agent{label "slave-linux"}*/
    agent any
    stages{
        stage("git checkout"){
             steps{
                      git branch:params.SelectBranch, credentialsId: 'github-creds', url: 'https://github.com/greeshmagit/webtest1.git'
                  }
        }
            
         stage("Maven package"){
              steps{
                         sh 'mvn -f webtest1/pom.xml clean package'
                   }
         }
         stage("Docker build"){
              steps{
                           sh "docker build -t pgreeshma/webtest:v1 -f webtest1/Dockerfile ."
                           /*docker build -t <tag-name> -f <file-name>*/
                   }
          }
          stage("Docker push to nexus"){
               steps{
                        /* withCredentials([usernamePassword(credentialsId: 'nexus', passwordVariable: 'pwd', usernameVariable: 'user')]) {
                          sh "nexus login -u ${user} -p ${pwd}"
                          sh "docker push admin/webtest:v1"
                         }*/
                         
                         /* docker push to docker hub*/
                        withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'pwd', usernameVariable: 'user')]) {
                          sh "docker login -u ${user} -p ${pwd}"
                          sh "docker push pgreeshma/webtest:v1"
                        }
                   }
          }
          stage("docker deploy dev"){
               steps{
                           sshagent(['tomcat']){
                           
                                /*from dockerhub repo*/
                               sh "ssh -o StrictHostkeyChecking=no ec2-user@172.31.32.18 docker run -d -p 8080:8080 --name tomcat pgreeshma/webtest:v1"
                                
                                 /*from nexus repo*/
                                 //sh "ssh -o StrictHostkeyChecking=no ec2-user@172.31.32.18 docker run -d -p 8080:8080 --name tomcat admin/webtest:v1"//
                                }
                     }
          }
                   /*stage("nexus artifact for maven"){
                  steps{
                      script{
                         def mavenPom = readMavenPom file:'webtest1/pom.xml'
                         def nexusRepoName = mavenPom.version.endsWith("SNAPSHOT") ? "mvn-web-snapshot" : "mvn-web-nex"
                         nexusArtifactUploader artifacts: [[artifactId: 'webtest', classifier: '', file: 'webtest1/target/webtest.war', type: 'war']],
                         credentialsId: 'nexus',
                         groupId: 'com.greeshma',
                         nexusUrl: '172.31.15.210:8081', 
                         nexusVersion: 'nexus3', 
                         protocol: 'http',
                         repository: nexusRepoName, 
                         version: mavenPom.version
                       }
                   }
                }*/
              /* stage("deploy"){
                  steps{
                          tomcat deploy with tomcat server private ip
                          
                          tomcatdeploy('ec2-user','172.31.1.31','tomcat')
                          
                          docker deploy with docker server private ip
                          
                          tomcatdeploy('ec2-user','172.31.32.18','tomcat')
                     }
              }*/
                   
       }
   }
       
  
                      
