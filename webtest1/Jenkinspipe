@Library("webtestlib") _
pipeline{
parameters {
  choice choices: ['main', 'develop', 'qatest'], description: 'choose a branch to build', name: 'SelectBranch'
  }
    agent{label "slave-linux"}
    stages{
        stage("main"){
            when {
                       expression {
                                     params.SelectBranch == 'main'
                                 }
                                 
                 }

                steps{
                         git branch:'main', credentialsId: 'github-creds', url: 'https://github.com/greeshmagit/webtest1.git' 
                         echo "deployed main branch job"
                         //tomcatdeploy('ec2-user','172.31.1.31','tomcat')//
               }
            
              }
              stage("develop"){
                when {
                          expression {
                                      params.SelectBranch == 'develop'
                                    }
                          
                     }
    
                    steps{
                              '''checkout([$class: ‘GitSCM’, branches: [[name: ‘origin/develop’]], userRemoteConfigs: [[url: 'https://github.com/greeshmagit/webtest1.git’]]])'''
                             echo "deployed develop branch job"
                            // (tomcatdeploy('ec2-user','172.31.1.31','tomcat')//
                         }
                
                  }
                  stage("qatest"){
                    when {
                               expression {
                                            params.SelectBranch == 'qatest'
                                         }
                             
                         }
        
                        steps{
                               '''checkout([$class: ‘GitSCM’, branches: [[name: ‘origin/qatest’]], userRemoteConfigs: [[url: 'https://github.com/greeshmagit/webtest1.git’]]])'''
                               echo "deployed qatest branch job"
                                //tomcatdeploy('ec2-user','172.31.1.31','tomcat')//
                              }
                    
                      }
                stage("Maven build"){
                steps{
                         sh 'mvn -f webtest1/pom.xml clean package'
                     }
              }
       }
  }
                      
