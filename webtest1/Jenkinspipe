@Library("webtestlib") _
pipeline{
parameters {
  choice choices: ['main', 'develop', 'qatest'], description: 'choose a branch to build', name: 'SelectBranch'
  }
    agent{label "slave-linux"}
    stages{
        stage("main"){
            when {
                       expression {
                                     params.SelectBranch == 'main'
                                 }
                                 
                 }
                 steps{
                         git branch:'main', credentialsId: 'github-creds', url: 'https://github.com/greeshmagit/webtest1.git' 
                         echo "deployed main branch job"
                      }
            
          }
              stage("develop") {
                when {
                          expression {
                                      params.SelectBranch == 'develop'
                                    }
                          
                     }
    
                    steps{
                              git branch:'develop', credentialsId: 'github-creds', url: 'https://github.com/greeshmagit/webtest1.git' 
                              echo "deployed develop branch job"
                         }
                 }
                  stage("qatest") {
                    when {
                               expression {
                                            params.SelectBranch == 'qatest'
                                         }
                             
                         }
        
                        steps{
                                git branch:'qatest', credentialsId: 'github-creds', url: 'https://github.com/greeshmagit/webtest1.git' 
                                  echo "deployed qatest branch job"
                             }
                    
                      }
                stage("Maven build"){
                steps{
                         sh 'mvn -f webtest1/pom.xml clean package'
                     }
              }
              stage("nexus artifact){
                  steps{
                         nexusArtifactUploader artifacts: [[artifactId: 'webtest', classifier: '', file: 'webtest1/target/webtest.war', type: 'war']],
                         credentialsId: 'nexus',
                         groupId: 'com.greeshma',
                         nexusUrl: '172.31.15.210:8081', 
                         nexusVersion: 'nexus3', 
                         protocol: 'http',
                         repository: 'mvn-web-nex', 
                         version: '1.0-SNAPSHOT'
                       }
                   }
                       
               //stage("deploy"){
                steps{
                         tomcatdeploy('ec2-user','172.31.1.31','tomcat')
                     }
              }//
       
       }
   }
       
  
                      
